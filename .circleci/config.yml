version: 2.1

# reusable pieces
references:
  circleci_container: &circleci_container trussworks/circleci:efb1042e31538677779971798e0912390f699e72

# Define the different jobs associated with the project
jobs:
  build:
    docker:
      - image: *circleci_container
        auth:
          password: $DOCKER_PASSWORD
          username: $DOCKER_USERNAME
    steps:
      - checkout
      - run:
          name: Run the build 
          command: go build
      - run:
          name: Copying and moving things to the right spot
          command: |
            mkdir -p workspace
            cp musical-telegram workspace/musical-telegram
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - musical-telegram
  test:
    docker:
      - image: *circleci_container
        auth:
          password: $DOCKER_PASSWORD
          username: $DOCKER_USERNAME
    steps:
      - checkout
      - run:
          name: Run the test
          command: go test
#  deploy:
#    docker:
#      - image: *circleci_container
#        auth:
#          password: $DOCKER_PASSWORD
#          username: $DOCKER_USERNAME
#    steps:
#      - checkout
#      - run:
#          name: Run the release
#          command: ./release
  upload-binary:
    docker:
      - image: trussworks/gh-cli:59c97b71025cd8e185818d3817ff45895497b54e
        auth:
          password: $DOCKER_PASSWORD
          username: $DOCKER_USERNAME
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          name: Release zip file to gh
          command: gh release upload --clobber --repo "${GITHUB_USER}/${GITHUB_REPO}" "sandy-tag" "/tmp/workspace/musical-telegram"

# Sequencing of the jobs
workflows:
  ci:
    jobs:
    - build:
        context:
        - org-global
    - test:
        context:
        - org-global
    - upload-binary:
        context:
        - org-global
